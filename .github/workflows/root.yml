name: PHP Bin build
on:
  schedule:
    - cron: "0 0 * * 6"
  push:
    branches:
      - main

jobs:
  # Windows build
  win32:
    runs-on: windows-2019
    name: Windows
    steps:
      - name: Clone Repository
        uses: actions/checkout@v3
        with:
          repository: pmmp/php-build-scripts
          submodules: true

      - name: Windows Depencies Install
        run: choco install --no-progress wget

      - name: "Building php bin"
        run: .\windows-compile-vs.bat
        env:
          VS_EDITION: Enterprise
          SOURCES_PATH: ${{ github.workspace }}\pocketmine-php-sdk
      
      - name: show log
        run: type compile.log

      - name: Create tarball (tar.gz)
        run: 7z a -ttar -so dwt.tar bin/ | 7z a -si windows_x64.tar.gz

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Windows
          path: |
            php-*.zip
            *.tar.gz

      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Pocketmine
          tag_name: "Pocketmine${{ github.run_id }}"
          body: Windows
          files: |
            php-*.zip
            *.tar.gz

  # MacOS Build
  macos:
    runs-on: macos-10.15
    name: MacOS
    steps:
      - name: Clone Repository
        uses: actions/checkout@v3
        with:
          repository: pmmp/php-build-scripts
          submodules: true

      - name: Install dependecies
        run: brew install libtool autoconf automake pkg-config bison re2c

      - name: "Building php to MacoS"
        env: 
          LDFLAGS: "-L /usr/local/opt/bison/lib"
        run: |
          export PATH="/usr/local/opt/bison/bin:$PATH"
          set -ex
          trap "exit 1" ERR
          ./compile.sh -t mac-x86-64 -j4 -f -g

      - name: Show Log
        run: cat *.log

      - name: Create tarball
        run: zip macos_x64.zip bin/*

      - name: Create tarball (tar.gz)
        run: |
          cd bin/*
          pwd
          tar czfr ../macos_x64.tar.gz *

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: macos_x64
          path: |
            *.zip
            *.tar.gz
            *.log

      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Pocketmine
          tag_name: "Pocketmine${{ github.run_id }}"
          body: macos_x64
          files: |
            *.zip
            *.tar.gz
            *.tar.gz

  # MacOS Build
  macosarm64:
    runs-on: macos-10.15
    name: MacOS arm64
    steps:
      - name: Clone Repository
        uses: actions/checkout@v3
        with:
          repository: pmmp/php-build-scripts
          submodules: true

      - name: Install dependecies
        run: brew install libtool autoconf automake pkg-config bison re2c

      - name: "Building php to MacoS arm64"
        run: |
          export PATH="/usr/local/opt/bison/bin:$PATH"
          set -ex
          trap "exit 1" ERR
          ./compile.sh -t mac-arm64 -j4 -f -g

      - name: Show Log
        run: cat *.log

      - name: Create tarball (zip)
        run: zip macos_arm64.zip bin/*

      - name: Create tarball (tar.gz)
        run: |
          cd bin/*
          pwd
          tar czfr ../macos_arm64.tar.gz *

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: macos_arm64
          path: |
            *.zip
            *.tar.gz
            *.log

      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Pocketmine
          tag_name: "Pocketmine${{ github.run_id }}"
          body: macos_arm64
          files: |
            *.zip
            *.tar.gz
            *.tar.gz

  # Android Build arm64
  android:
    runs-on: ubuntu-latest
    name: Android
    container:
      image: ghcr.io/the-bds-maneger/android_musl:latest
    steps:
      - name: Clone Repository
        uses: actions/checkout@v3
        with:
          repository: pmmp/php-build-scripts
          submodules: true

      - name: Linux Depencies Install
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          apt update
          apt install -y build-essential make wget gzip bzip2 bison git cmake re2c autoconf automake pkg-config libtool* unzip zip tar

      - name: "Building php bin"
        run: ./compile.sh -t android-aarch64 -x -f -g -j$(nproc)

      - name: Show Log
        run: cat *.log

      - name: Create tarball (zip)
        run: zip android_arm64.zip bin/*

      - name: Create tarball (tar.gz)
        run: |
          cd bin/*
          pwd
          tar czfr ../android_arm64.tar.gz *

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: android_arm64
          path: |
            *.zip
            *.tar.gz
            *.log

      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Pocketmine
          tag_name: "Pocketmine${{ github.run_id }}"
          body: android_arm64
          files: |
            *.zip
            *.tar.gz
            *.tar.gz

  # Linux Build
  linux:
    runs-on: ubuntu-latest
    name: Linux amd64
    steps:
      - name: Clone Repository
        uses: actions/checkout@v3
        with:
          repository: pmmp/php-build-scripts
          submodules: true

      - name: Linux Depencies Install
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt update
          sudo apt install -y build-essential make wget gzip bzip2 bison git cmake re2c autoconf automake pkg-config libtool* unzip zip tar

      - name: "Building php bin"
        run: ./compile.sh -j$(nproc)

      - name: Show Log
        run: cat *.log

      - name: Create tarball (zip)
        run: zip linux_x64.zip bin/*

      - name: Create tarball (tar.gz)
        run: |
          cd bin/*
          pwd
          tar czfr ../linux_x64.tar.gz *

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: linux_x64
          path: |
            *.zip
            *.tar.gz
            *.log

      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Pocketmine
          tag_name: "Pocketmine${{ github.run_id }}"
          body: linux_x64
          files: |
            *.zip
            *.tar.gz
            *.tar.gz

  # # Linux Build arm64
  # linuxmultiarch:
  #   runs-on: ubuntu-latest
  #   name: Linux multi arch
  #   steps:
  #     - name: Clone Repository
  #       uses: actions/checkout@v3

  #     - name: Setup QEMU to Docker
  #       uses: docker/setup-qemu-action@v1

  #     - name: Setup Buildx
  #       uses: docker/setup-buildx-action@v1

  #     - name: Install Unzip and zip
  #       env:
  #         DEBIAN_FRONTEND: noninteractive
  #       run: |
  #         sudo apt update
  #         sudo apt install -y unzip zip

  #     - name: Build arm64
  #       run: docker buildx build . --platform linux/arm64 --output type=local,dest=out_arm64

  #     - name: Upload artifacts
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: linux_multi
  #         path: |
  #           out_*/home/copiler/php_build_scripts/*.zip
  #           out_*/home/copiler/php_build_scripts/*.tar.gz
  #           out_*/home/copiler/php_build_scripts/*.log

  #     - name: Release
  #       uses: softprops/action-gh-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         name: Pocketmine
  #         tag_name: "Pocketmine${{ github.run_id }}"
  #         body: Windows
  #         files: |
  #           out_*/home/copiler/php_build_scripts/*.zip
  #           out_*/home/copiler/php_build_scripts/*.tar.gz
